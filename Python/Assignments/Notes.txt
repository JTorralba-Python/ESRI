cursors (each record, edit)

# comments

print("Wassup!")


raw text (special characters)
--------------------------------------------------
path = r"C:\temp" versus path = "C:\Temp"



SQL expression
--------------------------------------------------
"\"NAME\" = 'Alan'"

""""NAME" = 'Alan'"""



strip .shp

var = "Streets.shp"
var2 = var[0:-4]
var3 = var[ :-4]
var7 = var.rstrip(".shp"

grab shp

var4 = var[-4:0]
var5 = var[-4:]

grab "r"

var6 = var [2]



lists

grab Olympia

["alan","Olmpia,21]
newvar = var[1]		#string
newvar = var[1:2]	#array via colon


get len of string or list

x = len(var)


import math

print math.sqrt(25)

x = 0
while x < 25:
	x += 1
	print "Hello"
	

if var == "point":
	_____
	_____

elif var == "polyline"
	_____
	_____
elif var == "polygon"
	_____
	_____


print var1 + " is of type: " + var2 + " and is of length: " + str(var3)
print "{} is of type: {} and is of length {}".format(var1,var2,var3)
print "{0} is of type: {1} and is of length {2}".format(var1,var2,var3)


txtFile = open(path, rwa)
txtFile.read or txtFile.readlines()
txtFile.write() or txtFile.writelines()
txtFile.close()
os.popen(path)

normal.gxb
normal.mxd
arcpy



development process:
____________________

write script in IDE
attach script to custom tool
run script in ArcMap
verify results as geoprocessing
share result as geoprocessing


highlevel:
__________

input parameters
create feature layer for Parks
	- apple SQL expression to select only Central Park
create feature layer for ParkingMeters
SelectLayerByLocation using distance parameter
update flag field for selected meters
report selected meters count


pseduocode:
___________
obtain script parameter values
create feature layers
perform spatial selection
update flag field
copy selected meters to new feature class
report meter count


>>> arcpy.ImportToolbox("CustomTools.tbx")
<module 'PYTH' (built-in)>
>>> arcpy.JCaezar_PYTH(500,"Five_Hundred")
<Result 'C:\\Users\\Student\\Documents\\ArcGIS\\Default.gdb\\Five_Hundred'>
>>> 


- import x
- from x import y
- from x import *

as variable - (can be added to first two import statements)
import arcpy.mapping as map

reload(x) - (function used to reload modules when they are being edited)
